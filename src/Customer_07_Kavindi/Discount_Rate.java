/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Customer_07_Kavindi;

import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static sun.net.www.MimeTable.loadTable;

/**
 *
 * @author Janiya's PC
 */
public class Discount_Rate extends javax.swing.JPanel {

    /**
     * Creates new form Discount_Rate
     */
    public Discount_Rate() {
        initComponents();
        GenerateCategoryId();
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Cat_Id = new javax.swing.JTextField();
        Pre_tage = new javax.swing.JTextField();
        rangeF = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        update = new javax.swing.JButton();
        rangeT = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Category ID", "Precentage", "Range From", "Range To"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Category ID");

        jLabel2.setText("Precentage");

        jLabel3.setText("Range From");

        Cat_Id.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Cat_IdFocusGained(evt);
            }
        });
        Cat_Id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cat_IdActionPerformed(evt);
            }
        });
        Cat_Id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Cat_IdKeyReleased(evt);
            }
        });

        Pre_tage.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Pre_tageFocusGained(evt);
            }
        });
        Pre_tage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Pre_tageActionPerformed(evt);
            }
        });
        Pre_tage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Pre_tageKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Pre_tageKeyTyped(evt);
            }
        });

        rangeF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                rangeFFocusGained(evt);
            }
        });
        rangeF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rangeFActionPerformed(evt);
            }
        });
        rangeF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rangeFKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                rangeFKeyTyped(evt);
            }
        });

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        update.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                updateKeyReleased(evt);
            }
        });

        jLabel4.setText("Range To");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 776, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(55, 55, 55)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(update)
                                .addGap(33, 33, 33)
                                .addComponent(save))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(Cat_Id)
                                .addComponent(Pre_tage)
                                .addComponent(rangeF)
                                .addComponent(rangeT, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel3)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Cat_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Pre_tage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(rangeF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rangeT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(update)
                    .addComponent(save))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
        int i = jTable1.getSelectedRow();
        Cat_Id.setText((String) df.getValueAt(i, 0));
        Pre_tage.setText((String) df.getValueAt(i, 1));
        rangeF.setText((String) df.getValueAt(i, 2));
        rangeT.setText((String) df.getValueAt(i, 3));
    }//GEN-LAST:event_jTable1MouseClicked

    private void Cat_IdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Cat_IdFocusGained
        Cat_Id.selectAll();
    }//GEN-LAST:event_Cat_IdFocusGained

    private void Cat_IdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cat_IdActionPerformed
        try {
            ResultSet rs = DB.MyDB.search("select * from loyalty_discount where category_id=' " + Cat_Id.getText() + "'");

            //idloyalty_discount, category_id, presentage, renge
            if (rs.next()) {
                Cat_Id.setText(rs.getString("category_id"));
                Pre_tage.setText(rs.getString("presentage"));
                rangeF.setText(rs.getString("renge"));
                rangeT.setText(rs.getString("renge"));
                Cat_Id.grabFocus();
            } else {
                Cat_Id.setText("");
                Pre_tage.setText("");
                rangeF.setText("");
                rangeT.setText("");
                GenerateCategoryId();
                Cat_Id.grabFocus();

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_Cat_IdActionPerformed

    private void Cat_IdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Cat_IdKeyReleased
        char c = (char) evt.getKeyCode();
        if (c == KeyEvent.VK_DOWN) {
            Pre_tage.grabFocus();
        }
    }//GEN-LAST:event_Cat_IdKeyReleased

    private void Pre_tageFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Pre_tageFocusGained

    }//GEN-LAST:event_Pre_tageFocusGained

    private void Pre_tageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Pre_tageActionPerformed
        rangeF.grabFocus();
    }//GEN-LAST:event_Pre_tageActionPerformed

    private void Pre_tageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Pre_tageKeyReleased
        char c = (char) evt.getKeyCode();
        if (c == KeyEvent.VK_UP) {
            Cat_Id.grabFocus();
        }
        if (c == KeyEvent.VK_DOWN) {
            rangeF.grabFocus();
        }
    }//GEN-LAST:event_Pre_tageKeyReleased

    private void Pre_tageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Pre_tageKeyTyped
        if (!(Character.isDigit(evt.getKeyChar()))) {
            evt.consume();
        }
        if (Pre_tage.getText().length() >= 2) {
            evt.consume();
        }
    }//GEN-LAST:event_Pre_tageKeyTyped

    private void rangeFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rangeFFocusGained
        rangeF.selectAll();
    }//GEN-LAST:event_rangeFFocusGained

    private void rangeFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rangeFActionPerformed
        update.grabFocus();
    }//GEN-LAST:event_rangeFActionPerformed

    private void rangeFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rangeFKeyReleased
        char c = (char) evt.getKeyCode();
        if (c == KeyEvent.VK_UP) {
            Pre_tage.grabFocus();
        }
        if (c == KeyEvent.VK_DOWN) {
            update.grabFocus();
        }
    }//GEN-LAST:event_rangeFKeyReleased

    private void rangeFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rangeFKeyTyped

        char c = evt.getKeyChar();

        if (!(Character.isDigit(evt.getKeyChar()))) {

            if (c == '-') {

            } else {
                evt.consume();
            }
        }

    }//GEN-LAST:event_rangeFKeyTyped

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        if (Cat_Id.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Category Id");
            Cat_Id.grabFocus();
        } else if (Pre_tage.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Precentage");
            Pre_tage.grabFocus();
        } else if (rangeF.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter range");
            rangeF.grabFocus();
        }

        int k = JOptionPane.showConfirmDialog(this, "Do you want to save this data?", "WARNING", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (k == 0) {
            //idloyalty_discount, category_id, presentage, range

            try {
                //                DB.MyDB.iud("insert into loyalty_discount(category_id, presentage, range) values ('" + Cat_Id.getText() + "','" + Pre_tage.getText() + "','" + range.getText()+ "')");
                DB.MyDB.iud("insert into loyalty_discount  (category_id, presentage, range_from, renge_to) values('" + Cat_Id.getText() + "','" + Pre_tage.getText() + "','" + rangeF.getText() + "','" + rangeT.getText() + "')");
                JOptionPane.showMessageDialog(this, "Successfully Saved!");
                Cat_Id.setText("");
                Pre_tage.setText("");
                rangeF.setText("");
                rangeT.setText("");
                GenerateCategoryId();
                loadTable();
                Cat_Id.grabFocus();

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_saveActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        //idloyalty_discount, category_id, presentage, range

        int k = JOptionPane.showConfirmDialog(this, "Do you want to update this Data?", "WARNING!", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (k == 0) {
            try {
                DB.MyDB.iud("Update loyalty_discount set presentage='" + Pre_tage.getText() + "',presentage='" + Pre_tage.getText() + "',range_from='" + rangeF.getText() + "',renge_to='" + rangeT.getText() + "' where category_id='" + Cat_Id.getText() + "'");
                JOptionPane.showMessageDialog(this, "Successfully updated");
                Cat_Id.setText("");
                Pre_tage.setText("");
                rangeF.setText("");
                rangeT.setText("");
                loadTable();
                GenerateCategoryId();
                Cat_Id.grabFocus();

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_updateActionPerformed

    private void updateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_updateKeyReleased
        char c = (char) evt.getKeyCode();
        if (c == KeyEvent.VK_RIGHT) {
            save.grabFocus();
        }
    }//GEN-LAST:event_updateKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Cat_Id;
    private javax.swing.JTextField Pre_tage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField rangeF;
    private javax.swing.JTextField rangeT;
    private javax.swing.JButton save;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
private void GenerateCategoryId() {
        // idloyalty_discount, category_id, presentage, range

        try {
            ResultSet rs = DB.MyDB.search("select max(category_id) from loyalty_discount");
            if (rs.next()) {
                Cat_Id.setText(Integer.parseInt(rs.getString("max(category_id)")) + 1 + "");
            } else {
                Cat_Id.setText("1");
            }

        } catch (Exception e) {
            Cat_Id.setText("1");
        }

    }

    private void loadTable() {

        DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
        try {
            ResultSet rs = DB.MyDB.search("select * from loyalty_discount");
            df.setRowCount(0);
            while (rs.next()) {

                Vector v = new Vector();
                v.add(rs.getString("category_id"));
                v.add(rs.getString("presentage"));
                v.add(rs.getString("range_from"));
                v.add(rs.getString("renge_to"));
                df.addRow(v);
            }

        } catch (Exception e) {
            e.printStackTrace();

        }
    }
}
