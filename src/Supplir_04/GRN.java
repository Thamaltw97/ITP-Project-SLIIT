/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Supplir_04;

import CR_05_Pemmawadu.Item_Search;
import POS_02_Sameera.Item_Details;
import POS_02_Sameera.Supplier_Search;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Janiya's PC
 */
public class GRN extends javax.swing.JPanel {

    /**
     * Creates new form GRN
     */
    public GRN() {
        initComponents();
        generateGrn_No();
        search();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        sup_name = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        grn_no = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        ref_no = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        sup_id = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        qty = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        item_id = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        item_cost = new javax.swing.JLabel();
        sell_price = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel17 = new javax.swing.JLabel();
        discount = new javax.swing.JTextField();
        sub_category = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        category = new javax.swing.JLabel();
        dept = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        stock = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        item_name = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        saveTable = new javax.swing.JButton();
        removeRow = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        amount = new javax.swing.JLabel();
        net_amount = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        dis = new javax.swing.JTextField();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Item Id", "Item Name", "Qty", "Cost", "Sell", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("GRN NO");

        sup_name.setForeground(new java.awt.Color(102, 102, 102));
        sup_name.setText("Suplier Name");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Date");

        jLabel2.setText("Suplier ID");

        grn_no.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                grn_noFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                grn_noFocusLost(evt);
            }
        });
        grn_no.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grn_noActionPerformed(evt);
            }
        });
        grn_no.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                grn_noKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grn_noKeyTyped(evt);
            }
        });

        jButton8.setText("New (F3)");
        jButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        ref_no.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ref_noFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ref_noFocusLost(evt);
            }
        });
        ref_no.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ref_noActionPerformed(evt);
            }
        });
        ref_no.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ref_noKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ref_noKeyTyped(evt);
            }
        });

        jLabel4.setText("Ref No");

        sup_id.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                sup_idFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                sup_idFocusLost(evt);
            }
        });
        sup_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sup_idActionPerformed(evt);
            }
        });
        sup_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sup_idKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sup_idKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(sup_id, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton8))
                            .addComponent(grn_no, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(199, 199, 199)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ref_no)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)))
                    .addComponent(sup_name, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(grn_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(ref_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jButton8)
                                    .addComponent(sup_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sup_name)
                .addGap(9, 9, 9))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel10.setText("Item Cost");

        qty.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                qtyFocusGained(evt);
            }
        });
        qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyActionPerformed(evt);
            }
        });
        qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                qtyKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qtyKeyTyped(evt);
            }
        });

        jLabel11.setText("Selling Price");

        item_id.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                item_idFocusGained(evt);
            }
        });
        item_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item_idActionPerformed(evt);
            }
        });
        item_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                item_idKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                item_idKeyTyped(evt);
            }
        });

        jLabel13.setText("Qty");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Item Description");

        jLabel8.setText("Item ID");

        jButton6.setText("New (F3)");
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        item_cost.setForeground(new java.awt.Color(102, 102, 102));
        item_cost.setText("00.00");

        sell_price.setForeground(new java.awt.Color(102, 102, 102));
        sell_price.setText("00.00");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel17.setText("Discount");

        discount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                discountFocusGained(evt);
            }
        });
        discount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountActionPerformed(evt);
            }
        });
        discount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                discountKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                discountKeyTyped(evt);
            }
        });

        sub_category.setForeground(new java.awt.Color(102, 102, 102));
        sub_category.setText("-");

        jLabel12.setText("Sub Category");

        jLabel20.setText("Department");

        category.setForeground(new java.awt.Color(102, 102, 102));
        category.setText("-");

        dept.setForeground(new java.awt.Color(102, 102, 102));
        dept.setText("-");

        jLabel23.setText("Category");

        jLabel24.setText("Stock In Hand");

        stock.setForeground(new java.awt.Color(102, 102, 102));
        stock.setText("0");

        jLabel21.setText("Item Name");

        item_name.setForeground(new java.awt.Color(102, 102, 102));
        item_name.setText("-");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(item_id, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(qty, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6)
                .addGap(41, 41, 41)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(72, 72, 72)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(item_cost, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(category, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(sell_price, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(dept, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(sub_category, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(stock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(150, 150, 150))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(item_name, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(249, 249, 249))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(item_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(item_name))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(dept))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(category))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(sub_category))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(item_cost))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(sell_price))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(stock)))
                    .addComponent(jSeparator2))
                .addContainerGap())
        );

        jButton9.setText("Export to Excel");
        jButton9.setBorder(null);
        jButton9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton5.setText("Save");
        jButton5.setBorder(null);
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setText("Print");
        jButton7.setBorder(null);
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        saveTable.setText("Save To Table");
        saveTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveTableActionPerformed(evt);
            }
        });

        removeRow.setText("Remove Row");
        removeRow.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        removeRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeRowActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        amount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        amount.setText("0");

        net_amount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        net_amount.setText("0");

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel16.setText("Total Amount ");

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel19.setText("Net Amount  ");

        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel26.setText("Discount");

        dis.setText("0");
        dis.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                disFocusGained(evt);
            }
        });
        dis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disActionPerformed(evt);
            }
        });
        dis.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                disKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                disKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(net_amount, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dis, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(net_amount, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(removeRow)
                        .addGap(34, 34, 34)
                        .addComponent(saveTable)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeRow)
                    .addComponent(saveTable))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
        try {
            int row = jTable1.getSelectedRow();

            item_id.setText((String) jTable1.getModel().getValueAt(row, 1));
            item_name.setText((String) jTable1.getModel().getValueAt(row, 2));
            qty.setText((String) jTable1.getModel().getValueAt(row, 3));
            item_cost.setText((String) jTable1.getModel().getValueAt(row, 4));
            sell_price.setText((String) jTable1.getModel().getValueAt(row, 5));
            amount.setText((String) jTable1.getModel().getValueAt(row, 6));
            int i = jTable1.getSelectedRow();
            //            ResultSet rs = DB.MyDB.search("SELECT * FROM item WHERE iditem='" + jTable1.getModel().getValueAt(row, 1) + "' ");
            ResultSet rs = DB.MyDB.search("SELECT * FROM item i "
                    + "inner join department d on i.department_id = d.id "
                    + "inner join category c on i.category_id = c.id "
                    + "inner join sub_category s on i.sub_category_id = s.id where i.iditem = '" + df.getValueAt(i, 1) + "'");
            if (rs.next()) {
                dept.setText(rs.getString("d.description"));
                category.setText(rs.getString("c.description"));
                sub_category.setText(rs.getString("s.description"));
                stock.setText(rs.getString("i.qty"));

                qty.grabFocus();

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void grn_noFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_grn_noFocusGained
        grn_no.selectAll();
    }//GEN-LAST:event_grn_noFocusGained

    private void grn_noFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_grn_noFocusLost

    }//GEN-LAST:event_grn_noFocusLost

    private void grn_noActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grn_noActionPerformed
        search();
        ref_no.grabFocus();
    }//GEN-LAST:event_grn_noActionPerformed
    Grn_Search gs;
    private void grn_noKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grn_noKeyReleased
        char c = (char) evt.getKeyCode();

        if (c == evt.VK_F2) {
            if (gs == null) {
                gs = new Grn_Search();
                gs.setVisible(true);
            } else {
                gs.setVisible(true);
            }
        }
        if (c == KeyEvent.VK_DOWN) {
            ref_no.grabFocus();
        }
    }//GEN-LAST:event_grn_noKeyReleased

    private void grn_noKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grn_noKeyTyped

    }//GEN-LAST:event_grn_noKeyTyped
    Supplier_Details sup_d;
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // add new supplier

        if (sup_d == null) {
            sup_d = new Supplier_Details();
            sup_d.setVisible(true);

        } else {
            sup_d.setVisible(true);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void ref_noFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ref_noFocusGained
        ref_no.selectAll();
    }//GEN-LAST:event_ref_noFocusGained

    private void ref_noFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ref_noFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_ref_noFocusLost

    private void ref_noActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ref_noActionPerformed
        sup_id.grabFocus();
    }//GEN-LAST:event_ref_noActionPerformed

    private void ref_noKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ref_noKeyReleased
        char c = (char) evt.getKeyCode();

        if (c == KeyEvent.VK_UP) {
            grn_no.grabFocus();
        }
        if (c == KeyEvent.VK_DOWN) {
            sup_id.grabFocus();
        }
    }//GEN-LAST:event_ref_noKeyReleased

    private void ref_noKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ref_noKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_ref_noKeyTyped

    private void sup_idFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sup_idFocusGained
        sup_id.selectAll();
    }//GEN-LAST:event_sup_idFocusGained

    private void sup_idFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sup_idFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_sup_idFocusLost

    private void sup_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sup_idActionPerformed
        try {
            ResultSet rs = DB.MyDB.search("SELECT * FROM supplier where id = '" + sup_id.getText() + "'");
            if (rs.next()) {
                sup_name.setText(rs.getString("name"));

            } else {
                sup_name.setText("Supplier Name");
            }
            item_id.grabFocus();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_sup_idActionPerformed
    Supplier_Search ss;
    private void sup_idKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sup_idKeyReleased
        char c = (char) evt.getKeyCode();

        if (c == evt.VK_F2) {
            if (ss == null) {
                ss = new Supplier_Search();
                ss.setVisible(true);
            } else {
                ss.setVisible(true);
            }
        } else if (c == evt.VK_F3) {
//            if (sd == null) {
//                sd = new Suplier_Details();
//                sd.setVisible(true);
//            } else {
//                sd.setVisible(true);
//            }
        }
        if (c == KeyEvent.VK_UP) {
            ref_no.grabFocus();
        }
        if (c == KeyEvent.VK_DOWN) {
            item_id.grabFocus();
        }
    }//GEN-LAST:event_sup_idKeyReleased

    private void sup_idKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sup_idKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_sup_idKeyTyped

    private void qtyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_qtyFocusGained
        qty.selectAll();
    }//GEN-LAST:event_qtyFocusGained

    private void qtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyActionPerformed
        discount.grabFocus();
    }//GEN-LAST:event_qtyActionPerformed

    private void qtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyKeyReleased
        char c = (char) evt.getKeyCode();

        if (c == KeyEvent.VK_UP) {
            item_id.grabFocus();
        }
        if (c == KeyEvent.VK_DOWN) {
            discount.grabFocus();
        }
    }//GEN-LAST:event_qtyKeyReleased

    private void qtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyKeyTyped

    }//GEN-LAST:event_qtyKeyTyped

    private void item_idFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_item_idFocusGained
        item_id.selectAll();
    }//GEN-LAST:event_item_idFocusGained

    private void item_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item_idActionPerformed
        searchh();
    }//GEN-LAST:event_item_idActionPerformed
    Item_Search is;
    private void item_idKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_item_idKeyReleased

        char c = (char) evt.getKeyCode();

        if (c == evt.VK_F2) {
            if (is == null) {
                is = new Item_Search();
                is.setVisible(true);
            } else {
                is.setVisible(true);
            }
        } else if (c == evt.VK_F3) {
//            if (item_de == null) {
//                item_de = new Item_Details();
//                item_de.setVisible(true);
//            } else {
//                item_de.setVisible(true);
//            }
        }
        if (c == KeyEvent.VK_UP) {
            sup_id.grabFocus();
        }
        if (c == KeyEvent.VK_DOWN) {
            qty.grabFocus();
        }
    }//GEN-LAST:event_item_idKeyReleased

    private void item_idKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_item_idKeyTyped

    }//GEN-LAST:event_item_idKeyTyped

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        //add new item

//        if (item_d == null) {
//            item_d = new Item_Details();
//            item_d.setVisible(true);
//
//        } else {
//            item_d.setVisible(true);
//        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void discountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_discountFocusGained
        discount.selectAll();
    }//GEN-LAST:event_discountFocusGained

    private void discountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountActionPerformed

        if (item_id.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Item ID !!");
            item_id.grabFocus();
        } else if (qty.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Quantity !!");
            qty.grabFocus();
        } //        else if (Integer.parseInt(qty.getText()) > Integer.parseInt(stock.getText())) {
        //            JOptionPane.showMessageDialog(this, "Quantity should not exceed the stock amount !");
        //            discount.grabFocus();
        //
        //        }
        else {

            DefaultTableModel df = (DefaultTableModel) jTable1.getModel();

            int x = Integer.parseInt(qty.getText());
            float b = Float.valueOf(sell_price.getText());
            float dis = Float.valueOf(discount.getText());
            float cost = Float.valueOf(item_cost.getText());

            int s = 0;
            int k = 0;

            for (int i = 0; i < jTable1.getRowCount(); i++) {
                if (df.getValueAt(i, 1).equals(item_id.getText())) {
                    s = 1;
                    k = i;
                }
            }
            if (s == 1) {
                int r = JOptionPane.showConfirmDialog(this, "This item is already added ! Do you want add again ?", "WARNING !", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                if (r == 0) {

                    int qnty = x;
                    String bb = (String) df.getValueAt(k, 3);

                    int tqnty = Integer.parseInt(bb);
                    df.setValueAt(qnty + tqnty + "", k, 3);

                    int row = jTable1.getSelectedRow();
                    String c = (String) jTable1.getModel().getValueAt(row, 6);
                    float amunt = Float.valueOf(c);
                    float tot_amunt = amunt + (x * b);
                    df.setValueAt(tot_amunt, row, 6);

                    //                    tot_cost = Float.valueOf(jLabel3.getText());
                    //                    tot_cost = tot_cost + (z * x);
                    //                    jLabel3.setText(String.valueOf(tot_cost));
                    //
                    //                    tot_sell = Float.valueOf(jLabel4.getText());
                    //                    tot_sell = tot_sell + (y * x);
                    //                    jLabel4.setText(String.valueOf(tot_sell));
                    total = Float.valueOf(amount.getText());
                    total = total + (x * b);
                    amount.setText(String.valueOf(total));

                    item_id.setText("");
                    qty.setText("");
                    discount.setText("");
                    item_name.setText("");
                    dept.setText("");
                    category.setText("");
                    sub_category.setText("");
                    item_cost.setText("00.00");
                    sell_price.setText("00.00");
                    stock.setText("0");

                }

            } else {

                Vector v = new Vector();

                v.add(grn_no.getText());
                v.add(item_id.getText());
                v.add(item_name.getText());
                v.add(qty.getText());
                v.add(item_cost.getText());
                v.add(sell_price.getText());
                v.add((x * b) - ((x * b) * (dis / 100)));
                df.addRow(v);

                amount();

                item_id.setText("");
                qty.setText("");
                discount.setText("");
                item_name.setText("");
                dept.setText("");
                category.setText("");
                sub_category.setText("");
                item_cost.setText("00.00");
                sell_price.setText("00.00");
                stock.setText("0");

                item_id.grabFocus();

            }
        }
    }//GEN-LAST:event_discountActionPerformed

    private void discountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountKeyReleased
        char c = (char) evt.getKeyCode();

        if (c == KeyEvent.VK_UP) {
            qty.grabFocus();
        }
    }//GEN-LAST:event_discountKeyReleased

    private void discountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_discountKeyTyped

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        DefaultTableModel df = (DefaultTableModel) jTable1.getModel();

        Double amountt = 0.0;
        Double diss = 0.0;
        Double nett = 0.0;

        if (dis.getText().trim().isEmpty()) {
            net_amount.setText(amount.getText());
        } else {
            diss = Double.parseDouble(GRN.dis.getText());
            amountt = Double.parseDouble(GRN.amount.getText());
            nett = (amountt / 100) * diss;
            net_amount.setText(amountt + nett + "");
        }
        if (jButton5.getText().equals("Save")) {

            if (grn_no.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter GRN NO !!");
                grn_no.grabFocus();
            } else if (ref_no.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter Ref No !!");
                ref_no.grabFocus();
            } else if (sup_id.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter Suppliier ID !!");
                sup_id.grabFocus();
            } else {

                Date d1 = jDateChooser1.getDate();
                SimpleDateFormat sf = new SimpleDateFormat("yyyy-MM-dd");
                String d = sf.format(d1);
                int r = JOptionPane.showConfirmDialog(this, "Do you want to save this data ?", "WARNING !", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                if (r == 0) {

                    try {
                        //                        idGrn, supplier_id, date, Total_amount, discount, net_Amount, status, ref_no, user_username
                        DB.MyDB.iud("INSERT INTO grn VALUES ('" + grn_no.getText() + "','" + sup_id.getText() + "','" + d + "','" + amount.getText() + "', '" + discount.getText() + "', '" + net_amount.getText() + "', '1', '" + ref_no.getText() + "','sanju')");
                        //                       Grn_idGrn, item_iditem, qty, cost, sell, amount, description
                        for (int i = 0; i < jTable1.getRowCount(); i++) {
                            DB.MyDB.iud("INSERT INTO grn_has_item VALUES ('" + df.getValueAt(i, 0) + "', '" + df.getValueAt(i, 1) + "', '" + df.getValueAt(i, 3) + "', '" + df.getValueAt(i, 4) + "', '" + df.getValueAt(i, 5) + "', '" + df.getValueAt(i, 6) + "', '" + df.getValueAt(i, 2) + "')");
                        }

                        JOptionPane.showMessageDialog(this, "Successfully saved !!");
                        generateGrn_No();

                        grn_no.setText("");
                        sup_id.setText("");
                        sup_name.setText("Supplier Name");
                        //                        item_id.setText("");
                        //                        qty.setText("");
                        amount.setText("");
                        net_amount.setText("");
                        ref_no.setText("");
                        item_id.setText("");
                        qty.setText("");
                        discount.setText("");
                        item_name.setText("");
                        dept.setText("");
                        category.setText("");
                        sub_category.setText("");
                        item_cost.setText("00.00");
                        sell_price.setText("00.00");
                        stock.setText("0");

                        df.setRowCount(0);

                        grn_no.grabFocus();
                        generateGrn_No();

                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            }

        } else if (jButton5.getText().equals("Update")) {

            Date d1 = jDateChooser1.getDate();
            SimpleDateFormat sf = new SimpleDateFormat("yyyy-MM-dd");
            String d = sf.format(d1);

            int r = JOptionPane.showConfirmDialog(this, "Do you want to update this data ?", "WARNING !", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (r == 0) {
                try {
                    //     idGrn, supplier_id, date, Total_amount, discount, net_Amount, status, ref_no, user_username
                    DB.MyDB.iud("update grn set supplier_id='" + sup_id.getText() + "',date='" + d + "',Total_amount='" + amount.getText() + "',discount='" + dis.getText() + "',net_Amount='" + net_amount.getText() + "',status='1',ref_no='" + ref_no.getText() + "' where idGrn='" + grn_no.getText() + "'");
                    DB.MyDB.iud("delete from grn_has_item where Grn_idGrn='" + grn_no.getText() + "'");
                    //                       Grn_idGrn, item_iditem, qty, cost, sell, amount, description
                    for (int i = 0; i < jTable1.getRowCount(); i++) {
                        DB.MyDB.iud("INSERT INTO grn_has_item VALUES ('" + df.getValueAt(i, 0) + "', '" + df.getValueAt(i, 1) + "', '" + df.getValueAt(i, 3) + "', '" + df.getValueAt(i, 4) + "', '" + df.getValueAt(i, 5) + "', '" + df.getValueAt(i, 6) + "', '" + df.getValueAt(i, 2) + "')");
                    }

                    JOptionPane.showMessageDialog(this, "Successfully updated !!");
                    item_id.setText("");
                    qty.setText("");
                    discount.setText("");
                    item_name.setText("");
                    dept.setText("");
                    category.setText("");
                    sub_category.setText("");
                    item_cost.setText("00.00");
                    sell_price.setText("00.00");
                    stock.setText("0");
                    grn_no.setText("");
                    sup_id.setText("");
                    sup_name.setText("Supplier Name");
                    generateGrn_No();
                    df.setRowCount(0);
                } catch (Exception e) {
                    e.printStackTrace();
                }

            }

        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

    }//GEN-LAST:event_jButton7ActionPerformed
    float total = 0;
    private void saveTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveTableActionPerformed

        if (item_id.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Item ID !!");
            item_id.grabFocus();
        } else if (qty.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Quantity !!");
            qty.grabFocus();
        } //        else if (Integer.parseInt(qty.getText()) > Integer.parseInt(stock.getText())) {
        //            JOptionPane.showMessageDialog(this, "Quantity should not exceed the stock amount !");
        //            discount.grabFocus();
        //
        //        }
        else {

            DefaultTableModel df = (DefaultTableModel) jTable1.getModel();

            int x = Integer.parseInt(qty.getText());
            float b = Float.valueOf(sell_price.getText());
            float dis = Float.valueOf(discount.getText());
            float cost = Float.valueOf(item_cost.getText());

            int s = 0;
            int k = 0;

            for (int i = 0; i < jTable1.getRowCount(); i++) {
                if (df.getValueAt(i, 1).equals(item_id.getText())) {
                    s = 1;
                    k = i;
                }
            }
            if (s == 1) {
                int r = JOptionPane.showConfirmDialog(this, "This item is already added ! Do you want add again ?", "WARNING !", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                if (r == 0) {

                    int qnty = x;
                    String bb = (String) df.getValueAt(k, 3);

                    int tqnty = Integer.parseInt(bb);
                    df.setValueAt(qnty + tqnty + "", k, 3);

                    int row = jTable1.getSelectedRow();
                    String c = (String) jTable1.getModel().getValueAt(row, 6);
                    float amunt = Float.valueOf(c);
                    float tot_amunt = amunt + (x * b);
                    df.setValueAt(tot_amunt, row, 6);

                    //                    tot_cost = Float.valueOf(jLabel3.getText());
                    //                    tot_cost = tot_cost + (z * x);
                    //                    jLabel3.setText(String.valueOf(tot_cost));
                    //
                    //                    tot_sell = Float.valueOf(jLabel4.getText());
                    //                    tot_sell = tot_sell + (y * x);
                    //                    jLabel4.setText(String.valueOf(tot_sell));
                    total = Float.valueOf(amount.getText());
                    total = total + (x * b);
                    amount.setText(String.valueOf(total));

                    item_id.setText("");
                    qty.setText("");
                    discount.setText("");
                    item_name.setText("");
                    dept.setText("");
                    category.setText("");
                    sub_category.setText("");
                    item_cost.setText("00.00");
                    sell_price.setText("00.00");
                    stock.setText("0");

                }

            } else {

                Vector v = new Vector();

                v.add(grn_no.getText());
                v.add(item_id.getText());
                v.add(item_name.getText());
                v.add(qty.getText());
                v.add(item_cost.getText());
                v.add(sell_price.getText());
                v.add((x * b) - ((x * b) * (dis / 100)));
                df.addRow(v);

                amount();

                item_id.setText("");
                qty.setText("");
                discount.setText("");
                item_name.setText("");
                dept.setText("");
                category.setText("");
                sub_category.setText("");
                item_cost.setText("00.00");
                sell_price.setText("00.00");
                stock.setText("0");

                item_id.grabFocus();

            }
        }
    }//GEN-LAST:event_saveTableActionPerformed

    private void removeRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeRowActionPerformed

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        // get selected row index
        try {
            int SelectedRowIndex = jTable1.getSelectedRow();
            model.removeRow(SelectedRowIndex);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_removeRowActionPerformed

    private void disFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_disFocusGained
        dis.selectAll();
    }//GEN-LAST:event_disFocusGained

    private void disActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disActionPerformed
        DefaultTableModel df = (DefaultTableModel) jTable1.getModel();

        Double amountt = 0.0;
        Double diss = 0.0;
        Double nett = 0.0;

        if (dis.getText().trim().isEmpty()) {
            net_amount.setText(amount.getText());
        } else {
            diss = Double.parseDouble(GRN.dis.getText());
            amountt = Double.parseDouble(GRN.amount.getText());
            nett = (amountt / 100) * diss;
            net_amount.setText(amountt + nett + "");
        }
    }//GEN-LAST:event_disActionPerformed

    private void disKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_disKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_disKeyReleased

    private void disKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_disKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_disKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JLabel amount;
    public static javax.swing.JLabel category;
    public static javax.swing.JLabel dept;
    public static javax.swing.JTextField dis;
    public static javax.swing.JTextField discount;
    public static javax.swing.JTextField grn_no;
    public static javax.swing.JLabel item_cost;
    public static javax.swing.JTextField item_id;
    public static javax.swing.JLabel item_name;
    public static javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    public static javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    public static javax.swing.JTable jTable1;
    public static javax.swing.JLabel net_amount;
    public static javax.swing.JTextField qty;
    public static javax.swing.JTextField ref_no;
    private javax.swing.JButton removeRow;
    public static javax.swing.JButton saveTable;
    public static javax.swing.JLabel sell_price;
    public static javax.swing.JLabel stock;
    public static javax.swing.JLabel sub_category;
    public static javax.swing.JTextField sup_id;
    public static javax.swing.JLabel sup_name;
    // End of variables declaration//GEN-END:variables
private void generateGrn_No() {
        try {
            ResultSet rs = DB.MyDB.search("SELECT Max(idGrn) FROM grn");
            if (rs.next()) {

                grn_no.setText(Integer.parseInt(rs.getString("max(idGrn)")) + 1 + "");

            } else {
                grn_no.setText("1");
            }
        } catch (Exception e) {
            grn_no.setText("1");
        }
    }

    private void search() {
        DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
        try {

            ResultSet rs = DB.MyDB.search("select * from grn where idGrn = '" + grn_no.getText() + "' ");
            if (rs.next()) {
                ref_no.setText(rs.getString("ref_no"));
                sup_id.setText(rs.getString("supplier_id"));
                sup_name.setText("");
                jDateChooser1.setDate(java.sql.Date.valueOf(rs.getString("date")));
                amount.setText(rs.getString("Total_amount"));
                dis.setText(rs.getString("discount"));
                net_amount.setText(rs.getString("net_Amount"));

                jButton5.setText("Update");
            } else {
                jButton5.setText("Save");
            }

            //Grn_idGrn, item_iditem, qty, cost, sell, amount, description`;
            ResultSet rs1 = DB.MyDB.search("select * from grn_has_item where Grn_idGrn = '" + grn_no.getText() + "'");
            df.setRowCount(0);

            while (rs1.next()) {

                Vector v = new Vector();
                v.add(rs1.getString("Grn_idGrn"));
                v.add(rs1.getString("item_iditem"));
                v.add(rs1.getString("description"));
                v.add(rs1.getString("qty"));
                v.add(rs1.getString("cost"));
                v.add(rs1.getString("sell"));
                v.add(rs1.getString("amount"));
                df.addRow(v);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void amount() {

        DefaultTableModel df = (DefaultTableModel) jTable1.getModel();

        Double m = 0.0;
        Double n = 0.0;
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            n = Double.parseDouble(df.getValueAt(i, 6).toString());
            m = m + n;
        }
        amount.setText(m + "");
        net_amount.setText(m + "");
    }

    public static void searchh() {
        try {
            ResultSet rs = DB.MyDB.search("SELECT * FROM item i "
                    + "inner join department d on i.department_id = d.id "
                    + "inner join category c on i.category_id = c.id "
                    + "inner join sub_category s on i.sub_category_id = s.id "
                    + "where i.iditem ='" + item_id.getText() + "'");

            if (rs.next()) {
                item_name.setText(rs.getString("description"));
                dept.setText(rs.getString("d.description"));
                category.setText(rs.getString("c.description"));
                sub_category.setText(rs.getString("s.description"));
                item_cost.setText(rs.getString("cost"));
                sell_price.setText(rs.getString("sell_price"));
                stock.setText(rs.getString("qty"));

                qty.grabFocus();
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}
